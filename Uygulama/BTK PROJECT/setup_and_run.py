import os
import subprocess
import sys
import venv
import platform

# Sanal ortam klas√∂r√º
VENV_DIR = "env"

# Gerekli k√ºt√ºphaneler ve s√ºr√ºmleri
REQUIREMENTS = [
    "opencv-python>=4.5.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "deepface>=0.0.79",
    "matplotlib>=3.4.0",
    "Pillow>=9.0.0",
    "tk"
]

# Uygulama dosyasƒ±
APP_FILENAME = "face_app.py"

def enable_powershell_execution_policy():
    if os.name == "nt":
        print("üîê PowerShell y√ºr√ºtme izni veriliyor...")
        subprocess.call([
            "powershell",
            "Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser -Force"
        ])

def create_virtual_env():
    if not os.path.exists(VENV_DIR):
        print("üîß Sanal ortam olu≈üturuluyor...")
        venv.create(VENV_DIR, with_pip=True)
        print("‚úÖ Sanal ortam olu≈üturuldu.")
    else:
        print("‚ÑπÔ∏è Sanal ortam zaten mevcut, atlanƒ±yor.")

def install_requirements():
    print("üì¶ Gerekli k√ºt√ºphaneler y√ºkleniyor...")

    # Sanal ortam i√ßindeki Python ve pip yollarƒ±
    python_executable = os.path.join(VENV_DIR, "Scripts", "python") if os.name == "nt" else os.path.join(VENV_DIR, "bin", "python")

    try:
        subprocess.check_call([python_executable, "-m", "pip", "install", "--upgrade", "pip"])
    except subprocess.CalledProcessError:
        print("‚ö†Ô∏è pip g√ºncellenemedi, devam ediliyor...")

    subprocess.check_call([python_executable, "-m", "pip", "install"] + REQUIREMENTS)
    print("‚úÖ K√ºt√ºphaneler y√ºklendi.")

def run_app():
    print("üöÄ Uygulama ba≈ülatƒ±lƒ±yor...")
    python_executable = os.path.join(VENV_DIR, "Scripts", "python") if os.name == "nt" else os.path.join(VENV_DIR, "bin", "python")
    subprocess.call([python_executable, APP_FILENAME])

if __name__ == "__main__":
    if os.name == "nt":
        enable_powershell_execution_policy()
    create_virtual_env()
    install_requirements()
    run_app()
